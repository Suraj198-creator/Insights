# import the necessary components first
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import time#
from sib_api_v3_sdk.rest import ApiException
import os
from dotenv import load_dotenv
import sib_api_v3_sdk
import csv
from supabase import create_client
import psycopg2
from email_obj import Email


load_dotenv()
url: str = os.getenv("SUPABASE_URL")
key: str = os.getenv("SUPABASE_KEY")
password: str = os.getenv("DATABASE_PASS")
supabase = create_client(url, key)

# Step 1: Get AI newsletter ID
ai_newsletter = supabase.table("newsletters").select("id").eq("slug", "ai").single().execute()
ai_id = ai_newsletter.data["id"]

crypto_newsletter = supabase.table("newsletters").select("id").eq("slug", "crypto").single().execute()
crypto_id = ai_newsletter.data["id"]

crypto_subs = supabase.table("subscriptions") \
    .select("email_id") \
    .eq("newsletter_id", ai_id) \
    .is_("unsubscribed_at", None) \
    .execute()
crypto_email_ids = [s["email_id"] for s in crypto_subs.data]


# Step 2: Get email_ids subscribed to AI newsletter (and not unsubscribed)
ai_subs = supabase.table("subscriptions") \
    .select("email_id") \
    .eq("newsletter_id", ai_id) \
    .is_("unsubscribed_at", None) \
    .execute()
ai_email_ids = [s["email_id"] for s in ai_subs.data]

# Step 3: Get actual email addresses
ai_emails = supabase.table("emails").select("email", "unsubscribe_token").in_("id", ai_email_ids).execute()
crypto_emails = supabase.table("emails").select("email", "unsubscribe_token").in_("id", crypto_email_ids).execute()


for e in ai_emails.data:
    ai_news_html = Email(e["email"], e["unsubscribe_token"],"ai")

ai_response = ai_emails.data
# print(ai_response)


for e in crypto_emails.data:
    crypto_news_html = Email(e["email"], e["unsubscribe_token"],"crypto")
    print(crypto_news_html)
crypto_response = crypto_emails.data





# port = 587
# smtp_server = "live.smtp.mailtrap.io"
# login = "1a2b3c4d5e6f7g" # paste your login generated by Mailtrap
# password = "1a2b3c4d5e6f7g" # paste your password generated by Mailtrap

# sender_email = "mailtrap@example.com"
# receiver_email = "new@example.com"
# message = MIMEMultipart("alternative")
# message["Subject"] = "multipart test"
# message["From"] = sender_email
# message["To"] = receiver_email
#
# # write the text/plain part
# # text = """\
# # Hi,
# # Check out the new post on the Mailtrap blog:
# # SMTP Server for Testing: Cloud-based or Local?
# # https://blog.mailtrap.io/2018/09/27/cloud-or-local-smtp-server/
# # Feel free to let us know what content would be useful for you!"""
#
# # write the HTML part
# html = """
# ...
# """
#
# # convert both parts to MIMEText objects and add them to the MIMEMultipart message
# # part1 = MIMEText(text, "plain")
# part2 = MIMEText(html, "html")
# # message.attach(part1)
# message.attach(part2)
#
# # send your email
# with smtplib.SMTP("live.smtp.mailtrap.io", 587) as server:
#     server.login(login, password)
#     server.sendmail(
#         sender_email, receiver_email, message.as_string()
#     )
#
# print('Sent')